  LINGO/LNX64 19.0.0.40 (26 Apr 2021)
 
  LINDO API 13.0.4099.270 (Apr 26 2021 15:25:08)
 
  Copyright (C) 2011-2020 LINDO Systems Inc. Licensed material,
  all rights reserved. Copying except as authorized in license
  agreement is prohibited.
 
  License location: /home/gjl/lingo19/license/linux64/lndlng19.lic
  Config  location: /home/gjl/lingo19/LINGO.CNF
 
  gaojialong@nudt.edu.cn
 
  License expires: 30 Apr 2024
 
  Licensed for educational use only.
  Branch-and-bound solver enabled.
  Nonlinear solver enabled.
  Barrier solver enabled.
  Global solver enabled.
  Integer solver enabled.
  Stochastic solver enabled.
  Conic solver enabled.
 
: SET ECHOIN 1
 
   Parameter        Old Value     New Value
    ECHOIN             1             1
 
:  TAKE CCBGProblem.lng
: MODEL:
? ! 将Cascade Bipartite Graph的任务分配问题用一个minmax的目标进行优
? ! 使得任务分配对计算和通信节点的时间开销最大值最小化;
? ! 变量主要为频率omega和任务分配矩阵Xp;
? !  Cascade Bipartite Graph;
? SETS:
?   cu /1..8/;
?   lk /1..14/;
?   f /1..12/;
?   p /1..12/;
?   e /1..4/;
? ! Make all the vectors, column vectors;
?   lxcxc( lk, cu, cu):  TENSOR;
?   fxf(f, f): OMEGA,WORKLOAD,DELAYCONSTRAINT,FLUXFORFUNCPAIR;
?   lv(lk): BANDWIDTH, DELAY,lkload;
?   cuv(cu): SPEED,cuload;
?   fv(f): FREQUENCY;
?   ev(e): evDemo;
?   cuxcu(cu, cu): DELAYFORCU;
? ! objective function;
?   cuxf(cu, f): Xp; ! Function Task assignment matrix;
?   ! Not adopted;
?   exf(e, f): OBJECTCONSTRAINT;
? ENDSETS
? DATA:
?   TENSOR  = @POINTER( 1);     ! "Topology" for different Compute Units with Transp
?   FLUXFORFUNCPAIR = @POINTER( 2);    ! "Data Load" of states;
?   FREQUENCY = @POINTER( 3);        ! "Freqency" of f diag([freqency,freqency,...,f
?   WORKLOAD = @POINTER( 4);        ! "Workload" of f diag([workload,workload,...,wo
?   BANDWIDTH = @POINTER( 5);       ! "Bandwidth" of Transport nodes;
?   SPEED = @POINTER( 6);           ! "Speed" of Compute Units;
?   DELAY = @POINTER( 7);           ! "Delay" of Transport nodes;
?   DELAYCONSTRAINT = @POINTER( 8); ! "Delay" constraint for pair(fi,fj);
?   OBJECTCONSTRAINT = @POINTER( 9); ! Bool flag for "Object" constraint for pair(fi
? ENDDATA
? procedure TensorProduct1:
? ! Frobenius inner product x1;
?   @FOR(cuxcu(i,j):DELAYFORCU(i,j)=
?        @SUM(lv(k):
?             TENSOR(k,i,j)*DELAY(k)))  ;
? endprocedure
? CALC:
?   ! Default options;
?   @SET( 'DEFAULT');
?   ! Suppress default output;
?   ! @SET( 'TERSEO', 2);
?   @SET('MXMEMB',1024);!Set Maximum Memory for model;
?   ! @MAX/MIN makes model nonlinear.Global solver will linearize @MAX/MIN;
?   @SET( 'GLOBAL', 1);
?   ! 2. 计算函数对间的通信时间 DELAYFORCU = TENSOR x1 DELAY;
?   TensorProduct1;
?   !@TABLE(FLUXFORFUNCPAIR);
?   !@WRITE( AQL);!Deal with var;
?   @TEXT() = '  Debug Output Showing Input:';
?   !@TABLE( OBJECTCONSTRAINT,2); !Deal with set and attri;
? ENDCALC
? [OBJ] MIN = MaxRatio;
? ! Entity Task assignment Mode: Xp Determined by Xe;
? ! Not adopted;
? ! Workload of each Transport node >=0;
?   ! Frobenius inner product x2,3;
? @FOR(lv(k):MaxRatio >= @SUM(cuxcu(i,j):TENSOR(k,i,j)*@SUM(fxf(fi,fj):Xp(i,fi)*FREQ
? !@FOR(lv(k):MaxRatio >=
?     @SUM(cuxcu(i,j):
?         TENSOR(k,i,j)*@SUM(fxf(fi,fj):Xp(i,fi)*FREQUENCY(fi)*FLUXFORFUNCPAIR(fi,fj
? ! Worklad of each Compute Unit >= 0;
? ! Not adopted;
? !@FOR(cuv(cui):MaxRatio >=
?     @SUM(fv(lfj):Xp(cui,lfj)*WORKLOAD(lfj,lfj))/SPEED(cui));
? ! The delay of each pair of functions should be less than the constraint;
? @FOR(fxf(dfi,dfj):DELAYCONSTRAINT(dfi,dfj)>=
?       @SUM(cuxcu(dcui,dcuj):Xp(dcui,dfi)*Xp(dcuj,dfj)*@SUM(lv(k):TENSOR(k,dcui,dcu
?       @SUM(cuxcu(dcui,dcuj):Xp(dcui,dfi)*DELAYFORCU(dcui,dcuj)*Xp(dcuj,dfj)));
? ! Function assignment matrix Xp should be binary(bool) and satisfy the constraint 
? @FOR(fv(k):@SUM(cuv(ci):Xp(ci,k))=1); ! Function Task assignment matrix;
? @FOR(cuxf(i,j):@BIN(Xp(i,j))); ! Function Task assignment matrix;
? DATA:
?  @POINTER( 10) = Xp; ! Function Task assignment matrix(Both);
?  @POINTER( 11) = MaxRatio;      ! "Occupy Ratio of computation or communication;
?  @POINTER( 12) = @STATUS();
? ENDDATA
? END
:  GO
  Compiling model ...
   Debug Output Showing Input:
  Structural analysis, pass 1 ...
  Scalarizing model ...
  Generating nonzero matrix ...
  Solving ...
 
      Iters   Steps  Active     Status     Objective         Bound
        220       1       0    UNKNOWN    -0.100+308    -0.100E+31
        220       1       0    UNKNOWN    -0.100+308    -0.100E+31
 
 
 [Error Code:  191]
 
  The LINDO API returned the following error code:        2009
  LINDO API routine: LSgetCurrentMipSolutionInfo
  Requested information is not available.
 
 
  LINGO/LNX64 19.0.40 (26 Apr 2021), LINDO API 13.0.4099.270
 
  Licensee info: gaojialong@nudt.edu.cn
  License expires: 30 APR 2024
 
 
 [Error Code:  193]
 
  A solution is not available for this model.
 
  Running output operations ...
 
:  QUIT
